{
    "$schema": "https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.schema.json",
    "copyright": [
        "SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.",
        "SPDX-License-Identifier: Apache-2.0"
    ],
    "name": "NVIDIA Dynamo FRAMEWORK",
    "remoteUser": "ubuntu", // Matches our container user
    "updateRemoteUserUID": true, //ean m Updates the UID of the remote user to match the host user, avoids permission errors
    "image": "dynamo:latest-framework-local-dev", // Use the latest framework dev image
    "runArgs": [
        "--gpus=all",
        "--network=host",
        "--ipc=host",
        "--cap-add=SYS_PTRACE",
        "--shm-size=10G",
        "--ulimit=memlock=-1",
        "--ulimit=stack=67108864",
        "--ulimit=nofile=65536:65536"
    ],
    "service": "dynamo",
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "rust-lang.rust-analyzer",
                "eamodio.gitlens"  // Keiven's custom extension
            ],
            "settings": {
                "dev.containers.copyGitConfig": false,
                "terminal.integrated.defaultProfile.linux": "bash",
                "terminal.integrated.cwd": "/home/ubuntu/dynamo",

                "python.defaultInterpreterPath": "/opt/dynamo/venv/bin/python",
                "python.linting.enabled": true,

                "rust-analyzer.memoryLimit": 4096, // larger memory limit to reduce latency
                "rust-analyzer.checkOnSave.command": "clippy",
                "rust-analyzer.checkOnSave.enable": true,
                "rust-analyzer.cargo.buildScripts.enable": true,
                "rust-analyzer.cargo.targetDir": "/home/ubuntu/dynamo/.build/target",
                "rust-analyzer.procMacro.enable": true,
                "rust-analyzer.completion.autoimport.enable": true,

                // Enhanced rust-analyzer configuration
                "rust-analyzer.linkedProjects": [
                    "Cargo.toml",
                    "lib/runtime/Cargo.toml",
                    "lib/llm/Cargo.toml",
                    "lib/tokens/Cargo.toml",
                    "lib/bindings/python/Cargo.toml",
                    "launch/dynamo-run/Cargo.toml"
                ],
                "files.trimTrailingWhitespace": true,
                "files.insertFinalNewline": true
            }
        }
    },
    "workspaceFolder": "/home/ubuntu/dynamo",
    "workspaceMount": "source=${localWorkspaceFolder},target=/home/ubuntu/dynamo,type=bind,consistency=cached",
    "userEnvProbe": "interactiveShell",
    "postCreateCommand": "/bin/bash /home/ubuntu/dynamo/.devcontainer/post-create.sh", // Runs cargo build and pip installs packages
    "containerEnv": {
        "DYNAMO_HOME": "/home/ubuntu/dynamo",
        "CARGO_HOME": "/home/ubuntu/dynamo/.build/.cargo",
        "RUSTUP_HOME": "/home/ubuntu/dynamo/.build/.rustup",
        "CARGO_TARGET_DIR": "/home/ubuntu/dynamo/.build/target",
        "CARGO_PROFILE_DEV_OPT_LEVEL": "0",  // keiven's custom env var
        "CARGO_BUILD_JOBS": "32"  // keiven's custom env var
    },
    "remoteEnv": {
        // These are optional, but are convenient to have, especially the SSH_AUTH_SOCK.
        "GITHUB_TOKEN": "__GITHUB_TOKEN__",
        "HF_TOKEN": "__HF_TOKEN__"
        // "SSH_AUTH_SOCK": "${env:SSH_AUTH_SOCK}" // Optional: only if you also bind-mount the socket path
    },
    "mounts": [
        // These are for convenience, so that the history and pre-commit cache are persisted between sessions
        "source=dynamo-bashhistory,target=/home/ubuntu/.commandhistory,type=volume",
        "source=dynamo-precommit-cache,target=/home/ubuntu/.cache/pre-commit,type=volume",
        // Default mounts
        "source=/tmp/,target=/tmp/,type=bind",
        "source=${localEnv:HOME}/.cache/huggingface,target=/home/ubuntu/.cache/huggingface,type=bind",
        // Keiven's custom mounts
        //"source=${localEnv:HOME}/.ssh,target=/home/ubuntu/.ssh,type=bind,readonly",
        "source=/usr/bin/less,target=/usr/bin/less,type=bind,readonly",
        "source=${localEnv:HOME}/nvidia/dynamo-utils,target=/home/ubuntu/dynamo/bin,type=bind",
        "source=${localEnv:HOME}/nvidia/dynamo-utils/pyrightconfig.json,target=/home/ubuntu/dynamo/pyrightconfig.json,type=bind",
        "source=${localEnv:HOME}/nvidia/dynamo-utils/.cursorignore,target=/home/ubuntu/dynamo/.cursorignore,type=bind",
        "source=${localEnv:HOME}/nvidia/dynamo-utils/.cursorrules,target=/home/ubuntu/dynamo/.cursorrules,type=bind",
        "source=${localEnv:HOME}/.gnupg,target=/home/ubuntu/.gnupg,type=bind",
        "source=${localEnv:HOME}/.bash_aliases,target=/home/ubuntu/.bash_aliases,type=bind",
        "source=${localEnv:HOME}/.gitconfig,target=/home/ubuntu/.gitconfig,type=bind"
    ]
}
